{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNUXonYyt2jujl7Nn7cVgh4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import cv2 as cv \n","from google.colab.patches import cv2_imshow # for image display\n","from skimage import io\n","from PIL import Image \n","import matplotlib.pylab as plt"],"metadata":{"id":"6FKERdC4_GKq","executionInfo":{"status":"ok","timestamp":1675070577591,"user_tz":-330,"elapsed":693,"user":{"displayName":"Jeevika Shrivastava","userId":"10746851003607030314"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":253},"id":"6Axe3Dge9oeo","executionInfo":{"status":"error","timestamp":1675071054291,"user_tz":-330,"elapsed":735,"user":{"displayName":"Jeevika Shrivastava","userId":"10746851003607030314"}},"outputId":"a7f735ee-a254-4147-fd46-49b95498d3a5"},"outputs":[{"output_type":"error","ename":"error","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31merror\u001b[0m                                     Traceback (most recent call last)","\u001b[0;32m<ipython-input-9-b36123162cb3>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m         \u001b[0;31m# convert to gray scale of each frames\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 11\u001b[0;31m         \u001b[0mgray\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcvtColor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mCOLOR_BGR2GRAY\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m         \u001b[0;31m# Detects faces of different sizes in the input image\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31merror\u001b[0m: OpenCV(4.6.0) /io/opencv/modules/imgproc/src/color.cpp:182: error: (-215:Assertion failed) !_src.empty() in function 'cvtColor'\n"]}],"source":["face_cascade = cv.CascadeClassifier('/content/lbpcascade_frontalface_improved.xml')\n","# capture frames from a camera\n","cap = cv.VideoCapture(0)\n","# loop runs if capturing has been initialized.\n","while 1:\n","\n","\t# reads frames from a camera\n","\tret, img = cap.read()\n","\n","\t# convert to gray scale of each frames\n","\tgray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)\n","\n","\t# Detects faces of different sizes in the input image\n","\tfaces = face_cascade.detectMultiScale(gray, 1.3, 5)\n","\tnum = 0\n","\tfor (x,y,w,h) in faces:\n","\t\t# To draw a rectangle in a face\n","\t\tcv.rectangle(img,(x,y),(x+w,y+h),(255,255,0),2)\n","\t\troi_gray = gray[y:y+h, x:x+w]\n","\t\troi_color = img[y:y+h, x:x+w]\n","\t\tnum = num + 1\n","\n","\t# Display an image in a window\n","\tcv.imshow('img',img)\n","\tif(num>0) :\n","\t\tprint(\"Hello!!!\")\n","\t\tbreak\n","\t# Wait for Esc key to stop\n","\tk = cv.waitKey(30) & 0xff\n","\tif k == 27:\n","\t\tbreak\n","\n","# Close the window\n","cap.release()\n","\n","# De-allocate any associated memory usage\n","cv2.destroyAllWindows()"]}]}